version: "3.7"
x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 1000m
services:
  nwaku:
    # Provide the image using any of these methods

    # Method 1. Custom build
    # For a custom build, requires building your image
    # from nwaku repo: docker build -t nwaku:mytag .
    #image: nwaku:mytag

    # Method 2. Pre-built image (master commit)
    # For a pre-built image, use the firt 8 digits of the commit hash
    # all commits in nwaku master al built and pushed to dockerhub
    # See: hub.docker.com/r/statusteam/nim-waku
    #image: statusteam/nim-waku:982cd282

    # Method 3. Pre-built release
    # For a pre-built release. See available releases:
    # github.com/waku-org/nwaku/releases
    image: docker.io/statusteam/nim-waku:v0.16.0

    restart: on-failure
    volumes:
      - ./data:/data:Z
    networks:
      nwaku: {}
    ports:
      - 30304:30304/tcp
      - 30304:30304/udp
      - 9005:9005/udp
      - 127.0.0.1:8003:8003
    <<: *logging
    command:
      - --relay=true
      # Select the topics to subscribe to. If empty default is selected
      - --topics=/waku/2/dev-waku/proto
      - --filter=true
      - --lightpush=true
      - --store=true
      - --rpc-admin=true
      - --keep-alive=true
      - --max-connections=150
      - --dns-discovery=true
      # Pick one
      - --dns-discovery-url=enrtree://AOGECG2SPND25EEFMAJ5WF3KSGJNSGV356DSTL2YVLLZWIV6SAYBM@prod.waku.nodes.status.im
      #- --dns-discovery-url=enrtree://AOGECG2SPND25EEFMAJ5WF3KSGJNSGV356DSTL2YVLLZWIV6SAYBM@test.waku.nodes.status.im
      #- --dns-discovery-url=enrtree://AOGECG2SPND25EEFMAJ5WF3KSGJNSGV356DSTL2YVLLZWIV6SAYBM@test.nodes.status.im
      #- --dns-discovery-url=enrtree://AOGECG2SPND25EEFMAJ5WF3KSGJNSGV356DSTL2YVLLZWIV6SAYBM@prod.nodes.status.im
      - --discv5-discovery=true
      - --discv5-udp-port=9005
      - --discv5-enr-auto-update=True
      - --log-level=DEBUG
      - --rpc-port=8545
      - --rpc-address=0.0.0.0
      - --tcp-port=30304
      - --metrics-server=True
      - --metrics-server-port=8003
      - --metrics-server-address=0.0.0.0
      - --nat=extip:${MY_EXT_IP}
      #- --storenode=/dns4/node-01.do-ams3.wakuv2.prod.statusim.net/tcp/30303/p2p/16Uiu2HAmL5okWopX7NqZWBUKVqW8iUxCEmd5GMHLVPwCgzYzQv3e
      #- --peer-exchange-node=/dns4/node-01.do-ams3.wakuv2.prod.statusim.net/tcp/30303/p2p/16Uiu2HAmL5okWopX7NqZWBUKVqW8iUxCEmd5GMHLVPwCgzYzQv3e
      #- --peer-exchange-node=/dns4/node-01.do-ams3.wakuv2.prod.statusim.net/tcp/30304/p2p/16Uiu2HAmL5okWopX7NqZWBUKVqW8iUxCEmd5GMHLVPwCgzYzQv3e
      #- --store-message-db-url='sqlite:///data/store.sqlite3'
      #- --store-message-retention-policy=time:2592000

  prometheus:
    image: docker.io/prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus-config.yml:/etc/prometheus/prometheus.yml:Z
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 127.0.0.1:9090:9090
    networks:
      oauth2-proxy: {}
      nwaku: {}
    restart: on-failure

  grafana:
    image: docker.io/grafana/grafana:latest
    env_file:
      - ./monitoring/configuration/grafana-plugins.env
    volumes:
      - ./monitoring/configuration/grafana.ini:/etc/grafana/grafana.ini:Z
      - ./monitoring/configuration/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml:Z
      - ./monitoring/configuration/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml:Z
      - ./monitoring/configuration/dashboards:/var/lib/grafana/dashboards/:Z
      - ./monitoring/configuration/customizations/custom-logo.svg:/usr/share/grafana/public/img/grafana_icon.svg:Z
      - ./monitoring/configuration/customizations/custom-logo.svg:/usr/share/grafana/public/img/grafana_typelogo.svg:Z
      - ./monitoring/configuration/customizations/custom-logo.png:/usr/share/grafana/public/img/fav32.png:Z
    ports:
      - 127.0.0.1:3000:3000
    restart: on-failure
    networks:
      oauth2-proxy: {}
    depends_on:
      - prometheus

  oauth2-proxy:
    ports: []
    hostname: oauth2-proxy
    volumes:
      - "./oauth2-proxy-nginx.cfg:/oauth2-proxy.cfg"
    networks:
      oauth2-proxy: {}
    depends_on:
      - grafana
